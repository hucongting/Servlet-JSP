###监听器
1.什么是监听器?
  Servlet规范当中定义的一种特殊的组件,用于监听Servlet容器产生的事件进行相应的处理.
  容器产生的事件主要有两大类：a.生命周期相关的事件 b.绑定数据相关的事件
  a.容器创建了或者销毁了request,response,servlet上下文时产生的事件.
  b.调用了request,response,servlet上下文时产生的事件.
2.servlet上下文
  a.什么是servlet上下文?      当容器启动之后,会为每一个web应用创建唯一的符合ServletContext接口要求的对象,该对象会一直存在,除非容器关闭.
  b.如何获得servlet上下文?    GenericServlet,ServletConfig,FilterConfig,HttpSession都提供了一个方法(getServletContext)获得servlet上下文.
  c.作用
    1.绑定数据：response,request,servlet上下文都提供了绑定数据相关的方法(setAttribute,getAttribute,removeAttribute).
      区别: 优先使用生命周期短的
    2.可以访问的范围不一样
      绑定到session对象上的数据只有与该session对应的用户访问的到,绑定到servlet上下文的数据可以被所有用户共享(都能访问到)
  d.读取全局的初始化参数     全局的初始化参数指的是同一个web应用中的所有组件都能访问到的初始化参数
    


###如何写一个监听器
  step1.写一个java类,实现相应的监听器接口(依据监听的事件类型选择实现相应的监听器接口,例如实现HttpSessionListener监听对象的创建和销毁)
  step2.在监听器接口方法中,实现监听处理逻辑.
  step3.配置web.xml



###容器如何处理请求路径?
  比如,在浏览器地址栏输入http://ip:port/aaa/abc.html,浏览器会把/aaa/abc.html作为请求资源路径发给容器.
  step1.容器默认认为访问的是一个Servlet. 容器会从web.xml文件中,查找是否有匹配的Servlet


###如何让一个Servlet处理多种请求?
  step1.<utl-pattern>采用后缀匹配
  step2.分析请求资源路径,然后进行相应的处理
  






