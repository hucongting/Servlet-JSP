# Servlet
# Servlet学习笔记
# web服务器：iis,apache ws,nginx...（高并发，抗压web服务器）


1.什么时Servlet?
  Server let 服务器端小程序
  sum公司制定的一种用来扩展web服务器功能的组件规范.
  1) 扩展web服务器功能
     > web服务器只能够创建处理静态资源的请求（即需要事先讲html文档，图片等准备好），不能处理动态资源的请求（需要通过计算，生成相应的html内容）.
     > 可以使用Servlet来扩展web服务器的功能，当web服务器收到请求，如果该请求需要计算，则将请求交给Servlet来处理.
  
  
  2）组件规范
     > 什么是组件?
       符合符合规范，实现部分功能，并且需要部署到相应的容器当中才能运行的软件模块.
       Servlet就是一个组件，需要部署到相应的Servlet容器中才能运行.
     > 容器是什么?
       符合规范，提供组件运行环境的程序.
       浏览器-->请求web服务器（抗压，处理静态资源请求）-->调用Servlet服务器（处理业务逻辑，提供网络相关的服务）

2.如何写一个Servlet
  step1. 写一个java类：实现Servlet接口或者继承HttpServlet类（通常是继承HttpServlet类）
  step2. 编译：（.java编译成.class(字节码文件让JVM虚拟机执行)）    --通过javac命令编码（开发工具会帮我们实现.
  step3. 打包变成一个组件：
         即创建一个具有如下结构的文件夹：
         myapp
          WEB-INF
            classes   --(放.class文件)
            lib       --(可选,放.jar文件)
            web.xml   --(部署描述文件（描述文件）)
  step4. 部署： 将step3建好的整个文件夹拷贝到Servlet容器中(也可将setp3创建好的整个文件夹使用jar命令压缩成一个以.war为后缀的文件再拷贝容器自动解压)
  step5. 启动Servlet容器,访问Servlet.(http://ip:port/myapp/url-pattern)(url-pattern在web.xml描述文件中定义)
 
3.Servlet是如何运行的?
  比如输入: http://ip:port/myapp/xxx
  setp1. 浏览器依据ip,port建立连接
  setp2. 浏览器创建请求数据包,并且将请求数据包发送给Servlet容器
  setp3. Servlet容器将解析请求数据包中的数据,然后将解析到的数据放到request对象里面,然后再创建一个response对象
  setp4. Servlet容器创建Servlet实例,然后调用该实例的service方法(容器会将request,response对象作为参数传递进来(比如请求参数值)),然后将处理结果写到          response对象中. 也就是说开发人员不再关注网络相关的问题(比如解析请求数据包,生成响应数据包等等). 容器只创建一个Servlet实例.
  setp5. Servlet容器从response对象中获取处理结果,然后生成响应数据包并发送给浏览器
  setp6. 浏览器解析响应数据包,生成对应的页面.

4.常见错误
  1.404: 状态码, 表示服务器依据请求地址找不到对应的资源.
  2.500: 
  3.405: 




####重定向
  1.什么是重定向?
    服务器通知浏览器向一个新的地址发送请求.
    服务器可以通过发送302状态码和localhost消息头(值是一个地址,一般称之为重定向地址)给浏览器,浏览器收到之后,会立即重定向地址发送请求
  2.如何重定向?
    response.sendRedirect(String url);
    url就是重定向地址
  3.重定向特点
    a.重定向之前,容器会先清空response对象上存放的所有数据
    b.重定向地址是任意的
    c.重定向后地址栏会发生改变
    
####转发
  1.什么是转发?
    一个web组件将未完成的处理交给另外一个web组件继续做.(web组件是jsp或者servlet).
    - 常见场景: 一个servlet获得相应的数据,然后将这些数据交给一个jsp来展现.
  2.如何转发?
    a.将数据绑定到request对象上(request.setAttribute(String name,Object obj)).(底层是Map)
    b.获得转发器(RequestDispatcher rd = request.getRequestDispatcher(String uri))
      - RequestDispatcher是一个接口,getRequestDispatcher方法返回一个符合该接口要求的对象,即转发器
    c.rd.forward(request,response);
      - 转发本质：通知容器调用service方法,另外一个web组件
  3.特点?
    a.转发之后,浏览器地址栏的地址不变
    b.转发的目的地必须属于同一个web应用
  
    
    
    
    
    
    
    
    







