# Servlet
# Servlet学习笔记
# web服务器：iis,apache ws,nginx...（高并发，抗压web服务器）


1. 什么时Servlet?
  Server let 服务器端小程序
  sum公司制定的一种用来扩展web服务器功能的组件规范.
  1) 扩展web服务器功能
     > web服务器只能够创建处理静态资源的请求（即需要事先讲html文档，图片等准备好），不能处理动态资源的请求（需要通过计算，生成相应的html内容）.
     > 可以使用Servlet来扩展web服务器的功能，当web服务器收到请求，如果该请求需要计算，则将请求交给Servlet来处理.
  
  
  2）组件规范
     > 什么是组件?
       符合符合规范，实现部分功能，并且需要部署到相应的容器当中才能运行的软件模块.
       Servlet就是一个组件，需要部署到相应的Servlet容器中才能运行.
     > 容器是什么?
       符合规范，提供组件运行环境的程序.
       浏览器-->请求web服务器（抗压，处理静态资源请求）-->调用Servlet服务器（处理业务逻辑，提供网络相关的服务）

2. 如何写一个Servlet
  step1. 写一个java类：实现Servlet接口或者继承HttpServlet类（通常是继承HttpServlet类）
  step2. 编译：（.java编译成.class(字节码文件让JVM虚拟机执行)）    --通过javac命令编码（开发工具会帮我们实现.
  step3. 打包变成一个组件：
         即创建一个具有如下结构的文件夹：
         myapp
          WEB-INF
            classes   --(放.class文件)
            lib       --(可选,放.jar文件)
            web.xml   --(部署描述文件（描述文件）)
  step4. 部署： 将step3建好的整个文件夹拷贝到Servlet容器中(也可将setp3创建好的整个文件夹使用jar命令压缩成一个以.war为后缀的文件再拷贝容器自动解压)
  step5. 启动Servlet容器,访问Servlet.(http://ip:port/myapp/url-pattern)(url-pattern在web.xml描述文件中定义)










